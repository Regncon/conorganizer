package components

import (
  "fmt"
  "os"
  "io"
)

type IconType string

type IconSize string

const (
  IconChevronDown             IconType = "icon-chevron-down"
  IconChevronLeft             IconType = "icon-chevron-left"
  IconChevronRight            IconType = "icon-chevron-right"
  IconChevronUp               IconType = "icon-chevron-up"
  IconEventAdultOnly          IconType = "icon-event-adult-only"
  IconEventBeginnerFriendly   IconType = "icon-event-beginner-friendly"
  IconEventBoardgame          IconType = "icon-event-boardgame"
  IconEventCardgame           IconType = "icon-event-cardgame"
  IconEventChildFriendly      IconType = "icon-event-child-friendly"
  IconEventEnglish            IconType = "icon-event-english"
  IconEventOtherGames         IconType = "icon-event-other-games"
  IconEventRoleplay           IconType = "icon-event-roleplay"
  IconClose                   IconType = "icon-close"
  IconComment                 IconType = "icon-comment"
  IconGamemaster              IconType = "icon-gamemaster"
  IconHome                    IconType = "icon-home"
  IconImage                   IconType = "icon-image"
  IconTimeUnder3Hours         IconType = "icon-time-under-3-hours"
  IconTimeOver6Hours          IconType = "icon-time-over-6-hours"
  IconMenu                    IconType = "icon-menu"
  IconProgress25              IconType = "icon-progress-25"
  IconProgress50              IconType = "icon-progress-50"
  IconProgress75              IconType = "icon-progress-75"
  IconProgressComplete        IconType = "icon-progress-complete"
  IconProgressRejected        IconType = "icon-progress-rejected"
  IconShield                  IconType = "icon-shield"
  IconUser                    IconType = "icon-user "
)

const (
  IconSize24 IconSize = "24"
  IconSize16 IconSize = "16"
)

func getSVGContent(icon IconType) string {
  path := fmt.Sprintf("static/icons/%s.svg", icon)
  file, openFileOpenErr := os.Open(path)
  if openFileOpenErr != nil {
    return ""
  }
  defer file.Close()
  content, readFileReadErr := io.ReadAll(file)
  if readFileReadErr != nil {
    return ""
  }
  return string(content)
}


templ Icon(icon IconType, size IconSize) {
  {{
     svgContent := getSVGContent(icon) 
     containerClass := fmt.Sprintf("icon-size-%s", size)
  }}
  if svgContent != "" {
    <span class={containerClass}>
      @templ.Raw(svgContent)
    </span>
  }
}
