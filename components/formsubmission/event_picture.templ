package formsubmission

import (
	"fmt"
	"github.com/go-chi/chi/v5"
	"net/http"

	"database/sql"
	"github.com/Regncon/conorganizer/service/keyvalue"
	"github.com/nats-io/nats.go/jetstream"
	datastar "github.com/starfederation/datastar-go/datastar"
)

func UpdateOriginalImage(eventRouter chi.Router, db *sql.DB, kv jetstream.KeyValue) {
	//
	eventRouter.Post("/", func(w http.ResponseWriter, r *http.Request) {
		type Store struct {
			Input string `json:"original_image"`
		}
		store := &Store{}

		if err := datastar.ReadSignals(r, store); err != nil {
			http.Error(w, err.Error(), http.StatusBadRequest)
			return
		}

		eventID := chi.URLParam(r, "id")
		if eventID == "" {
			http.Error(w, "Event ID is required", http.StatusBadRequest)
			return
		}

		/*
			        query := `UPDATE events SET age_group = ? WHERE id = ?`
					_, err := db.Exec(query, store.Input, eventID)
					if err != nil {
						http.Error(w, "Failed to update the title for event in the database", http.StatusInternalServerError)
						return
					}

		*/
		if err := keyvalue.BroadcastUpdate(kv, r); err != nil {
			http.Error(w, "Failed to broadcast update", http.StatusInternalServerError)
			return
		}
	})
}

templ eventPicture(eventId string, title string, intro string) {
	<section class="form-card" style="display: flex; gap: 1rem;">
		<section class="form-group input">
			<label class="label-small color-strong">
				Bilde
				<input
					type="file"
					name="image"
					class="input"
					data-bind-files
					multiple
					accept="image/*"
					required
				/>
			</label>
			<button
				class="btn btn-primary"
				data-on-click={ fmt.Sprintf("$files.length && @post('/my-events/api/new/%s/image/original')", eventId) }
				data-attr-aria-disabled="`${!$files.length}`"
			>
				Submit
			</button>
		</section>
		<section class="form-group input">
			<script src="/static/web_components/banner_cropper.js"></script>
			<banner-cropper width="430" height="200"></banner-cropper>
			<div
				style="display: flex;
                    flex-direction: column;
                    align-items: center;
                    gap: 1rem;
                    background-color: var(--bg-base);"
				max-width="430px"
			>
				<h1 style="text-align:center; margin:0; ">{ title }</h1>
				<i style="overflow: clip;height: 38px; padding-inline:1rem;">{ intro }</i>
			</div>
		</section>
	</section>
}
