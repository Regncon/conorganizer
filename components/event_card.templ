package components

import (
	"fmt"
	"github.com/Regncon/conorganizer/models"
	"github.com/Regncon/conorganizer/service/eventimage"
)

templ EventCard(eventCard models.EventCardModel, eventImageDir *string, showStatus bool) {
	{{ imageUrl := eventimage.GetEventImageUrl(eventCard.Id, "card", eventImageDir) }}
	<a
		if eventCard.Status == models.EventStatusDraft || eventCard.Status == models.EventStatusSubmitted || eventCard.Status == models.EventStatusArchived {
			href={ templ.URL(fmt.Sprintf("/my-events/new/%s", eventCard.Id)) }
		} else {
			href={ templ.URL(fmt.Sprintf("/event/%s", eventCard.Id)) }
		}
		style="
                background-color: var(--bg-surface);
                border-radius: var(--border-radius-1x);
                display: grid;
                grid-template-rows: 11.25rem 110px 3.5rem;
                grid-template-columns: minmax(var(--mobile-min-width), 1fr);
                color: var(--color-primary-text);
                box-sizing: border-box;
                text-decoration: none;
                position: relative;
                "
	>
		if showStatus {
			<div
				style="
					position: absolute;
					top: 10px;
					left: 10px;
					background-color: rgba(0, 0, 0, 0.7);
					padding: 5px;
					border-radius: 5px;
				"
			>
				if eventCard.Status == models.EventStatusDraft {
					<span style="color:#C6A0F6">Kladd</span>
				} else if eventCard.Status == models.EventStatusSubmitted {
					<span style="color:var(--color-primary)">Innsendt</span>
				}
			</div>
		}
		<img
			src={ imageUrl }
			alt="Participants"
			style="
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                    border-radius:
                        var(--border-radius-1x)
                        var(--border-radius-1x)
                        0
                        0;
                "
		/>
		<div style="padding: var(--spacing-2x);">
			<div style="">
				<h2
					style="
                            white-space: nowrap;
                            overflow: clip;
                            text-overflow: ellipsis;
                            margin: 0;
                            font-size:16px;
                        "
				>
					if eventCard.Title != "" {
						{ eventCard.Title }
					} else {
						Nytt arrangement
					}
				</h2>
				<h3
					style="
                            white-space: nowrap;
                            overflow: clip;
                            text-overflow: ellipsis;
                            margin: 10px 0;
                            color: var(--color-primary);
                            font-size: 14px;
                        "
				>
					if eventCard.System != "" {
						{ eventCard.System }
					} else {
						Game System
					}
				</h3>
			</div>
			<p
				style="
                        overflow: clip;
                        margin-top: 0;
                        font-size: 14px;
                        height: 32px;
                        margin: 0;
                    "
			>
				if eventCard.Intro != "" {
					{ eventCard.Intro }
				} else {
					Legg til en kort beskrivelse
				}
			</p>
		</div>
		<div style="padding: var(--spacing-2x); border-top: 1px solid var(--bg-item-border);">
			<div
				style="
                            display: grid;
                            grid-template-columns: 2fr 1fr;
                        "
			>
				<div
					style="
                                display: flex;
                                flex-direction: row;
                                align-items: center;
                                gap: 6px;
                            "
				>
					@Icon(IconGamemaster)
					<p style="font-size: 12px; margin: 0;">
						if eventCard.HostName != "" {
							{ eventCard.HostName }
						} else {
							Arrang√∏r navn
						}
					</p>
				</div>
				<div
					style="
                            display: flex;
                            flex-direction: row;
                            justify-content: end;
                            align-items: center;
                            gap: 8px;
                        "
				>
					if eventCard.EventType == models.EventTypeRoleplay {
						@Icon(IconEventRoleplay)
					} else if eventCard.EventType == models.EventTypeBoardGame {
						@Icon(IconEventBoardgame)
					} else if eventCard.EventType == models.EventTypeCardGame {
						@Icon(IconEventCardgame)
					} else if eventCard.EventType == models.EventTypeOther {
						@Icon(IconEventOtherGames)
					}
					if eventCard.AgeGroup == models.AgeGroupAdultsOnly {
						@Icon(IconEventAdultOnly)
					} else if eventCard.AgeGroup == models.AgeGroupChildFriendly {
						@Icon(IconEventChildFriendly)
					}
					if eventCard.Runtime == models.RunTimeLongRunning {
						@Icon(IconTimeOver6Hours)
					} else if eventCard.Runtime == models.RunTimeShortRunning {
						@Icon(IconTimeUnder3Hours)
					}
					if eventCard.BeginnerFriendly {
						@Icon(IconEventBeginnerFriendly)
					}
					if eventCard.CanBeRunInEnglish {
						@Icon(IconEventEnglish)
					}
				</div>
			</div>
		</div>
	</a>
}
