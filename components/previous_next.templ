package components

css previousNextCard() {
	color: var(--color-primary-text);
	border: solid;
	background-color: var(--bg-surface);
	border-radius: var(--border-radius-2x);
	border-color: var(--bg-item-border);
	border-width: 1px;
	box-sizing: border-box;
	display: block;
	text-decoration: none;
	transition: border-color 120ms ease-in-out;
	height: 71px;
}

type PreviousNext struct {
	PreviousUrl      string
	PreviousTitle    string
	PreviousImageURL string
	NextUrl          string
	NextTitle        string
	NextImageURL     string
}

templ PreviousNextBar(previousNextData PreviousNext) {
	<style>
        .prev-next-wrapper {
            --linear-gradient-mask: linear-gradient(to left, black 19%, transparent 32%);
            --prev-next-max-width: 34.9375rem;
            --prev-next-responsive-max-width: min(100%, var(--prev-next-max-width));

            display: flex;
            flex-direction: column;
            gap: var(--spacing-2x);
            padding-inline: var(--spacing-2x);

            a {
                border-color: var(--bg-item-border);
                transition: border-color 250ms ease-in-out;
                width: 100%;
            }

            a:hover:not(a[aria-disabled="true"]), a:focus-visible:not(a[aria-disabled="true"]) {
                border-color: var(--color-primary);
            }

            a[aria-disabled="true"] {
                cursor: no-drop;
                opacity: 0.5;
            }
        }

        @container event-container (width >= 37.5rem) {
                & .prev-next-wrapper {
                    flex-direction: row;
                    place-content: space-between;
                    padding-inline: var(--spacing-10x);

                    a {
                        width: var(--prev-next-responsive-max-width);
                    }
                }
        }
    </style>
	<div class="prev-next-wrapper">
		if previousNextData.PreviousUrl != "" {
			<a
				href={ templ.URL(previousNextData.PreviousUrl) }
				class={ previousNextCard() }
				title={ previousNextData.PreviousTitle }
			>
				@previousButton(previousNextData.PreviousTitle, false, previousNextData.PreviousImageURL)
			</a>
		} else {
			<a
				class={ previousNextCard() }
				aria-disabled="true"
				title={ previousNextData.PreviousTitle }
			>
				@previousButton("Ingen flere arrangementer", true, "")
			</a>
		}
		if previousNextData.NextUrl != "" {
			<a
				href={ templ.URL(previousNextData.NextUrl) }
				title={ previousNextData.NextTitle }
				class={ previousNextCard() }
			>
				@nextButton(previousNextData.NextTitle, false, previousNextData.NextImageURL)
			</a>
		} else {
			<a
				class={ previousNextCard() }
				title={ previousNextData.NextTitle }
				aria-disabled="true"
			>
				@nextButton("Ingen flere arrangementer", true, "")
			</a>
		}
	</div>
}

templ previousButton(title string, disabled bool, imgurl string) {
	<div style="display: grid; grid-template-rows: 1fr; height: 100%;">
		<div class="text-container" style="display: flex; align-items: center; grid-row: 1 / 2; grid-column: 1 / 2;">
			<img
				style="width: 2rem; margin-right: 0.5rem;"
				src="/static/icons/angle-left-solid-full.svg"
				alt="Forrige arrangement"
			/>
			<div
				style="
                display: flex;
                flex-direction: column;
                gap: 0.25rem;
                overflow: clip;
                "
			>
				if !disabled {
					<span style="color: var(--color-text-soft); font-size:12px;height: 1lh;">Forrige arrangement</span>
				}
				<strong
					style="
                        height: 1lh;
                        word-break: break-all;
                    "
				>{ title }</strong>
			</div>
		</div>
		if disabled {
			<div></div>
		}
		if !disabled {
			<img
				src={ imgurl }
				title={ title }
				height="70px"
				style="
                    grid-row: 1 / 2;
                    grid-column: 1 / 2;
                    mask-image: var(--linear-gradient-mask);
                    -webkit-mask-image: var(--linear-gradient-mask);
                    filter:opacity(0.5);
                    place-self: end;
                    border-radius: var(--border-radius-2x);
                "
			/>
		}
	</div>
}

templ nextButton(title string, disabled bool, imgurl string) {
	<div style="display: grid; grid-template-rows: 1fr; height: 100%;">
		if disabled {
			<div></div>
		}
		if !disabled {
			<img
				src={ imgurl }
				title={ title }
				height="70px"
				style="
                transform: scaleX(-1);
				grid-row: 1 / 2;
                grid-column: 1 / 2;
				mask-image: var(--linear-gradient-mask);
				-webkit-mask-image: var(--linear-gradient-mask);
                filter:opacity(0.5);
                place-self: start;
                border-radius: var(--border-radius-2x);
			"
			/>
		}
		<div class="text-container" style="display: flex; flex-direction: row-reverse; align-items: center; grid-row: 1 / 2; grid-column: 1 / 2;">
			<img
				style="width: 2rem; margin-left: 0.5rem;"
				src="/static/icons/angle-right-solid-full.svg"
				alt="Neste arrangement"
			/>
			<div
				style="
                    display: flex;
                    flex-direction: column;
                    gap: 0.25rem;
                    overflow: clip;
                "
			>
				if !disabled {
					<span
						style="
                            color: var(--color-text-soft);
                            font-size:12px;
                            text-align:right;
                            height: 1lh;
                        "
					>
						Neste arrangement
					</span>
				}
				<strong
					style="
                        height: 1lh;
                        text-align: right;
                        word-break: break-all;
                    "
				>{ title }</strong>
			</div>
		</div>
	</div>
}
