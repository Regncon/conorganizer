package components

css previousNextCard() {
	color: var(--color-primary-text);
	border: solid;
	background-color: var(--bg-surface);
	border-radius: var(--border-radius-2x);
	border-color: var(--bg-item-border);
	border-width: 1px;
	box-sizing: border-box;
	display: block;
	text-decoration: none;
	padding: 1rem;
	transition: border-color 120ms ease-in-out;
}

type PreviousNext struct {
	PreviousUrl      string
	PreviousTitle    string
	PreviousImageURL string
	NextUrl          string
	NextTitle        string
	NextImageURL     string
}

templ PreviousNextBar(previousNextData PreviousNext) {
	<style>
        .prev-next-wrapper {
            --prev-next-max-width: 25.3125rem;
            --prev-next-responsive-max-width: min(100%, var(--prev-next-max-width));
            display: flex;
            flex-direction: column;
            gap: var(--spacing-2x);
            padding-inline: var(--spacing-2x);

            a {
                border-color: var(--bg-item-border);
                transition: border-color 250ms ease-in-out;
                width: 100%;
            }

            a:hover:not(a[aria-disabled="true"]), a:focus-visible:not(a[aria-disabled="true"]) {
                border-color: var(--color-primary);
            }

            a[aria-disabled="true"] {
                cursor: no-drop;
                opacity: 0.5;
            }
        }

        @container event-container (width > 34.875rem) {
                & .prev-next-wrapper {
                    flex-direction: row;
                    place-content: space-between;
                    padding-inline: var(--spacing-10x);

                    a {
                        width: var(--prev-next-responsive-max-width);
                    }
                }
        }
    </style>
	<div class="prev-next-wrapper">
		if previousNextData.PreviousUrl != "" {
			<a
				href={ templ.URL(previousNextData.PreviousUrl) }
				class={ previousNextCard() }
			>
				@previousButton(previousNextData.PreviousTitle)
			</a>
		} else {
			<div class={ previousNextCard() } aria-disabled="true">
				@previousButton(previousNextData.PreviousTitle)
			</div>
		}
		if previousNextData.NextUrl != "" {
			<a
				href={ templ.URL(previousNextData.NextUrl) }
				class={ previousNextCard() }
			>
				@nextButton(previousNextData.NextTitle)
			</a>
		} else {
			<a class={ previousNextCard() } aria-disabled="true">
				@nextButton(previousNextData.NextTitle)
			</a>
		}
	</div>
}

templ previousButton(title string) {
	<div style="display: flex; align-items: center;">
		<img
			style="width: 2rem; margin-right: 0.5rem;"
			src="/static/icons/angle-left-solid-full.svg"
			alt="Forrige arrangement"
		/>
		<div style="display: flex; flex-direction: column; gap: 0.25rem;">
			<span style="color: var(--color-text-soft); font-size:12px;">Forrige arrangement</span>
			<strong>{ title }</strong>
		</div>
	</div>
}

templ nextButton(title string) {
	<div style="display: flex; flex-direction: row-reverse; align-items: center;">
		<img
			style="width: 2rem; margin-left: 0.5rem;"
			src="/static/icons/angle-right-solid-full.svg"
			alt="Neste arrangement"
		/>
		<div style="display: flex; flex-direction: column; gap: 0.25rem;">
			<span style="color: var(--color-text-soft); font-size:12px; text-align:right;">Neste arrangement</span>
			<strong>{ title }</strong>
		</div>
	</div>
}
