FROM golang:1.24.4 AS builder
# Enable CGO (required for some C-based Go libraries)
ENV CGO_ENABLED=1

# Install necessary system dependencies
RUN apt-get update -y && apt-get install -y ca-certificates sqlite3

# Set workdir for building application
WORKDIR /usr/src/codebase
COPY . .

# Install templ and generate required files
RUN go install github.com/a-h/templ/cmd/templ@latest
RUN templ generate

# Copy over & install required dependencies
COPY go.mod go.sum ./
RUN go mod download && go mod verify

# Compile binary for use in next step
RUN go build -o /usr/local/bin/regncon .

# Add litestream, this is done in the builder and copied as the chmod doubles the size.
ADD https://github.com/benbjohnson/litestream/releases/download/v0.3.13/litestream-v0.3.13-linux-amd64.tar.gz /tmp/litestream.tar.gz
RUN tar -C /usr/local/bin -xzf /tmp/litestream.tar.gz



FROM debian:bookworm AS server
# Create user for webserver server
RUN groupadd -r regncon && useradd -r -g regncon -d /srv/regncon -s /usr/sbin/nologin regncon

# Install required libs
RUN apt-get update -y && apt-get install -y ca-certificates sqlite3

# Copy binaries from the previous build stages.
COPY --from=builder /usr/local/bin/regncon /usr/local/bin/regncon
COPY --from=builder /usr/local/bin/litestream /usr/local/bin/litestream

# Copy over fly.io configs
COPY .flyio/litestream.yml /etc/litestream.yml
COPY .flyio/replication.sh /usr/local/bin/replication.sh

# Copy over sql init file
COPY initialize.sql /usr/local/share/regncon/initialize.sql

# Set server startup script to be executable (todo)
RUN chmod +x /usr/local/bin/replication.sh

# Create data directory (although this will likely be up for change)
RUN mkdir -p /var/lib/regncon
RUN chown -R regncon:regncon /var/lib/regncon

# Switch to non-root user
USER regncon

EXPOSE 8080

CMD [ "/usr/local/bin/replication.sh" ]
