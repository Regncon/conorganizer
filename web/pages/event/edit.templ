package event

import (
	"database/sql"
	"encoding/json"
	"fmt"
	Modles "github.com/Regncon/conorganizer/models"
	"github.com/Regncon/conorganizer/web/pages/index"
	"github.com/go-chi/chi/v5"
	"github.com/nats-io/nats.go/jetstream"
	datastar "github.com/starfederation/datastar/sdk/go"
	"net/http"
)

func editRout(eventRouter chi.Router, db *sql.DB, kv jetstream.KeyValue) {
	eventRouter.Put("/edit", func(w http.ResponseWriter, r *http.Request) {
		fmt.Println("edit save")
		type Store struct {
			Input string `json:"input"`
		}
		store := &Store{}

		if err := datastar.ReadSignals(r, store); err != nil {
			http.Error(w, err.Error(), http.StatusBadRequest)
			return
		}

		if store.Input == "" {
			return
		}
		fmt.Println("input", store.Input)

		eventID := chi.URLParam(r, "idx")

		// Update the event in the database
		query := `UPDATE events SET title = ? WHERE id = ?`
		_, err := db.Exec(query, store.Input, eventID)
		if err != nil {
			http.Error(w, "Failed to update event in the database", http.StatusInternalServerError)
			return
		}

		// Broadcast the update to all clients watching the same event
		ctx := r.Context()
		allKeys, err := kv.Keys(ctx)
		if err != nil {
			http.Error(w, "Failed to retrieve keys", http.StatusInternalServerError)
			return
		}

		for _, sessionID := range allKeys {
			mvc := &index.TodoMVC{}
			if entry, err := kv.Get(ctx, sessionID); err == nil {
				if err := json.Unmarshal(entry.Value(), mvc); err != nil {
					continue // Ignore unmarshaling errors for other sessions
				}
				mvc.EditingIdx = -1
				if err := saveMVC(ctx, mvc, sessionID, kv); err != nil {
					fmt.Printf("Failed to save MVC for key %s: %v\n", sessionID, err)
				}
			}
		}
	})
}

templ edit(event *Modles.Event) {
	<div>
		<h2>Edit { event.Title } </h2>
		<input
			id="editTitleInput"
			data-testid="todos_input"
			placeholder="Event Title"
			data-bind-input
			data-on-keydown={ fmt.Sprintf(`
			if (evt.key !== 'Enter' || !$input.trim().length) return;
			%s;
			$input = '';
		`, datastar.PutSSE("/event/api/%d/edit",event.ID) ) }
			data-on-click__outside={ datastar.PutSSE("/event/api/%d/cancel", event.ID) }
		/>
	</div>
}
