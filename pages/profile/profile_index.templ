package profilepage

import (
	"database/sql"
	"github.com/Regncon/conorganizer/components"
	"github.com/Regncon/conorganizer/components/profile"
	"github.com/Regncon/conorganizer/layouts"
	"github.com/Regncon/conorganizer/pages/profile/tickets"
	"github.com/Regncon/conorganizer/service/requestctx"
	"github.com/Regncon/conorganizer/service/userctx"
	"github.com/delaneyj/toolbelt/embeddednats"
	"github.com/go-chi/chi/v5"
	"github.com/gorilla/sessions"
	"log/slog"
	"net/http"
)

func SetupProfileRoute(router chi.Router, store sessions.Store, ns *embeddednats.Server, db *sql.DB, eventImageDir *string, logger *slog.Logger) error {
	router.Route("/profile", func(profileRouter chi.Router) {
		profileRouter.Get("/", func(w http.ResponseWriter, r *http.Request) {
			var ctx = r.Context()
			var user = userctx.GetUserRequestInfo(ctx)

			layouts.Base(
				"Min profil side",
				user,
				ProfilePage(user, db, logger),
			).Render(ctx, w)
		})

		profileticketspage.ProfileTicketsRoute(profileRouter, store, ns, db, logger)
	})

	return nil
}

templ ProfilePage(user requestctx.UserRequestInfo, db *sql.DB, logger *slog.Logger) {
	@components.Breadcrumbs([]components.BreadcrumbPath{
		{Name: "Hjem", Url: "/"},
		{Name: "Min Side", Url: ""},
	})
	<section class="page-content-container profile-container">
		<div style="display: flex; flex:1; min-width: fit-content;">
			@profilecomponent.MyEvents(user.Id, db, logger)
			@profilecomponent.MyPropgram()
		</div>
		<div style="width: fit-content;">
			/* @profilecomponent.UserDetails(user) */
			@profilecomponent.MyTickets()
		</div>
	</section>
	<style>
        .profile-container {
            display: flex;
            gap: var(--spacing-8x);
            flex-flow: row wrap;
        }
    </style>
}
