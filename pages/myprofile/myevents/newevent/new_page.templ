package newEvent

import (
	"database/sql"
	"log/slog"
	"context"
	"github.com/Regncon/conorganizer/models"
	"github.com/Regncon/conorganizer/components"
	"github.com/Regncon/conorganizer/components/formsubmission"
	"github.com/Regncon/conorganizer/service/eventService"
	"github.com/Regncon/conorganizer/service/authctx"
	"github.com/Regncon/conorganizer/pages/event"
)

templ NewEventFormPage(eventId string, userId string, ctx context.Context, db *sql.DB, eventImageDir *string, logger *slog.Logger) {
	<div id="formsubmission-container" class="formsubmission-css-container">
		@NewEventFormPageContent(eventId, userId, ctx, db, eventImageDir, logger)
	</div>
}

templ NewEventFormPageContent(eventId string, userId string, ctx context.Context, db *sql.DB, eventImageDir *string, logger *slog.Logger) {
	{{
	isAdmin := authctx.GetAdminFromUserToken(ctx)
	eventData, eventErr := eventservice.GetEventById(eventId, db, logger)
	isRemovedPreviousNext := components.PreviousNext{IsRemoved: true}
	}}
	if eventErr != nil {
		<p>Error fetching events: { eventErr.Error() }</p>
		return
	}
	if  isAdmin == false && eventData.Status == models.EventStatusApproved || eventData.Status == models.EventStatusPublished {
		{{ logger.Error("Attempt to edit an already approved or published event", "eventId", eventId) }}
		<h1>Arrangementet er allerede godkjent eller publisert</h1>
		<h2>Ta kontakt med RegnCon styret på Dicord eller via epost om du ønsker å gjøre endringer på arrangementet.</h2>
	} else {
		@components.Breadcrumbs([]components.BreadcrumbPath{
			{Name: "Hjem", Url: "/"},
			{Name: "Mine arrangementer", Url: "/my-events/"},
			{Name: "Nytt arrangement", Url: ""},
		})
		<div style="display: flex; gap: 4rem;">
			<form
				class="formsubmission-wrapper page-content-container"
				action={ "/my-events/api/new/" + eventData.ID + "/submit" }
				method="post"
			>
				<h1 class="page-heading">Nytt arrangement</h1>
				@formsubmission.FormBody(eventData, isAdmin)
				@formsubmission.SubmitSection()
			</form>
			if isAdmin {
				<div style="padding:2rem;">
					@event.Event_mobile(eventData, isRemovedPreviousNext, eventImageDir)
				</div>
			}
		</div>
	}
}
