package event

import (
	"github.com/Regncon/conorganizer/components"
	"github.com/Regncon/conorganizer/components/event_components"
	"github.com/Regncon/conorganizer/models"
)

templ event_mobile(event *models.Event, previousNextData components.PreviousNext) {
	<style>
        .wrapper {
            display:flex;
            flex-direction:column;
            width: var(--mobile-responsive-min-width);

            > img {
                height: 150px;
                display: block;
            }

            .stack > * {
                grid-column: 1;
            }

            .stack {
                --row-overlapp: 3.125rem;
                display: grid;
                grid-template-rows: auto var(--row-overlapp) auto;

                > img {
                    aspect-ratio: 16 / 9;
                    width: 100%;
                    height: 100%;
                    object-fit: fill;
                    grid-row: 1 / 3;
                }

                .event-header {
                    display: flex;
                    flex-direction: column;
                    gap: 1rem;
                    background-color: var(--bg-base);
                    grid-row: 2 / 4;
                    text-align: center;
                    padding: var(--spacing-4x);
                    height: fit-content;
                    border-radius: var(--border-radius-2x);

                    .title {
                        text-align:center;
                        margin:0;
                    }
                    .intro {
                        overflow: clip;
                        height: 38px;
                    }
                }
            }

            .event-information {
                display: flex;
                flex-direction: column;
                gap: var(--spacing-4x);
                padding-inline: var(--spacing-2x);

                /*TODO: remove this if we change .card background color */
                .card {
                    background-color: var(--bg-surface);
                }

                .interest-picker {
                    display:flex;
                    align-items: center;
                    flex-direction:column;
                    gap:1rem;
                    padding: var(--spacing-4x);

                    > button {
                        max-width: 200px;
                    }
                }

                .details {
                    display: flex;
                    flex-direction: column;
                    padding: 0;

                    .details-top {
                        display: flex;
                        flex-direction: column;
                        gap: 0.5rem;
                        padding: var(--spacing-5x);

                        .event-type {
                            height: 20px;
                            width: 20px;
                            display: flex;
                            place-items: center;
                            gap: var(--spacing-1x);

                            img {
                                height: 15px;
                                width: 15px;
                            }
                            strong {
                                font-size: 12px;
                            }

                            .details-header {
                                font-size: 12px;
                            }
                        }
                    }

                    .details-bottom {
                        padding: 1rem;
                        display: flex;
                        flex-direction: column;
                        gap: 0.5rem;
                    }
                }

                .description {
                    margin: 0;
                    margin-block-start: var(--spacing-2x);
                }
            }
            @container event-container (width > 26.25rem) {
                &.wrapper {
                    width: 100%;
                    display: grid;
                    grid-template-rows: max-content max-content;
                    gap: var(--spacing-10x);
                    padding: var(--spacing-10x);
                    .stack {
                        --event-banner-height: 25rem;
                        --event-header-height: 10.1875rem;
                        --event-header-width: 65.5rem;
                        --event-header-missing-from-translating: 9px;
                        --event-header-half-height-and-translate: calc(var(--event-header-height) / 2 - var(--event-header-missing-from-translating));
                        --event-header-overlapp: var(--event-header-half-height-and-translate);

                        grid-template-rows: var(--event-banner-height) var(--event-header-overlapp);
                        place-items: end center;
                        img {
                            grid-row: 1 / 2;
                        }
                        .event-header{
                            grid-row: 1 / 2;
                            transform: translateY(45%);
                            margin-inline: 11.5%;
                            height: var(--event-header-height);
                        }
                    }
                    .event-information {
                        display: grid;
                        grid-template-areas: "interests details"
                                            "description details"
                                            "description empty";
                        gap: 0;
                        column-gap: var(--spacing-8x);
                        padding-inline: var(--spacing-10x);

                        .interest-picker {
                            width: 100%;
                            grid-area: interests;
                            margin-block-end: var(--spacing-8x);
                            flex-direction: row;
                            flex-wrap: wrap;
                            place-content: center;

                        }
                        .details {
                            grid-area: details;
                            height: fit-content;
                        }
                        .description {
                            margin-block-start: 0;

                        }
                    }
                }

            }
        }
    </style>
	<div class="wrapper">
		<div class="stack">
			<img
				alt="Arrangement banner"
				src="/static/placeholder-small.webp"
			/>
			<header class="event-header">
				<h1 class="title">{ event.Title }</h1>
				<i class="intro">{ event.Intro }</i>
			</header>
		</div>
		<div class="event-information">
			<div class="card interest-picker">
				<span>
					Du kan melde interesse når programmet slippes!
				</span>
				<button
					class="btn btn--cta"
					disabled
				>
					Meld interesse
				</button>
			</div>
			<div class="card details">
				<div class="details-top">
					<span class="details-header color-strong">Detaljer om arrangementet</span>
					<strong>Arrangør:</strong>
					<span class="color-strong">{ event.HostName } </span>
					<div class="event-type">
						if event.EventType == models.EventTypeRoleplay {
							<strong>Rollespill</strong>
							<img
								src="/static/icons/ttrpg.svg"
								alt="table top roleplaying game"
								height="10"
								width="10"
								fetchpriority="high"
							/>
						} else if event.EventType == models.EventTypeBoardGame {
							<strong>Brettspill</strong>
							<img
								src="/static/icons/boardgames.svg"
								alt="board game"
								height="10"
								width="10"
								fetchpriority="high"
							/>
						} else if event.EventType == models.EventTypeOther {
							<strong>Annet</strong>
							<img
								src="/static/icons/other-games.svg"
								alt="other type of game or event"
								height="10"
								width="10"
								fetchpriority="high"
							/>
						}
					</div>
					<span class="color-strong">{ event.System } </span>
				</div>
				<hr/>
				<div class="details-bottom">
					if event.AgeGroup == models.AgeGroupAdultsOnly {
						@event_components.Event_property("Egne for voksne", "adults-only-event.svg")
					}
					if event.AgeGroup == models.AgeGroupChildFriendly {
						@event_components.Event_property("Barnevennlig", "child-friendly-event.svg")
					}
					if event.Runtime == models.RunTimeLongRunning {
						@event_components.Event_property("Varer mer enn 6 timer", "more-than-6-hours.svg")
					}
					if event.Runtime == models.RunTimeShortRunning {
						@event_components.Event_property("Varer kortere 3 timer", "less-than-3-hours.svg")
					}
					if event.BeginnerFriendly {
						@event_components.Event_property("Nybegynnervennlig", "beginner-friendly.svg")
					}
					if event.CanBeRunInEnglish {
						@event_components.Event_property("Can be run in English", "english.svg")
					}
				</div>
			</div>
			<p class="description">{ event.Description } </p>
		</div>
		@components.PreviousNextBar(previousNextData)
	</div>
}
