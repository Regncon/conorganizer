package root

import (
	"database/sql"
	"fmt"
	"github.com/Regncon/conorganizer/components"
	"github.com/Regncon/conorganizer/models"
)

func init() {
	fmt.Println("init root")
	/*
			events, err := service.EventService.GetEvents()
			if err != nil {
				fmt.Printf("Error fetching events: %v\n", err)
				return
			}
			for _, event := range events {
				fmt.Printf("Event: %s (%s)\n", event.Name, event.Description)

			}
		}
	*/
}

/*
		service.AddEvent("Event 1", "Description 1")
		events, err := service.GetEvents()
		if err != nil {
			fmt.Println(err)
		}

		fmt.Println(events)
	}
*/
func SimpleFunction() string {
	message := "Hello, World! 2 more hello more world"
	fmt.Println(message)
	return message
}

func GetEvents(db *sql.DB) ([]models.Event, error) {
	query := "SELECT id, name, description FROM events"
	rows, err := db.Query(query)
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	var events []models.Event
	for rows.Next() {
		var event models.Event
		if err := rows.Scan(&event.ID, &event.Name, &event.Description); err != nil {
			return nil, err
		}
		events = append(events, event)
	}
	return events, nil
}

var tmp_string = SimpleFunction()

templ Page(name string, db *sql.DB) {
	{{ events, err := GetEvents(db) }}
	<html>
		@components.Header("Root Page")
		<body>
			<h1>{ name }</h1>
			<h2>{ tmp_string } </h2>
			<a href="/event">Go to event page</a>
			if err != nil {
				<p>Error fetching events: { err.Error() }</p>
				return
			}
			for _, event := range events {
				@eventCard(event.Name, "System", "Game Master", event.Description)
			}
			@eventCard("Event 1", "System 1", "Game Master 1", "Description 1")
		</body>
	</html>
}
