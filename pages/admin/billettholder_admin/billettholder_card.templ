package billettholderadmin

import (
	"github.com/Regncon/conorganizer/models"
	"html"
	"strconv"
	"strings"
	"unicode"
)

func highlightSearchTerm(text, searchTerm string) string {
	if len(searchTerm) == 0 {
		return html.EscapeString(text)
	}

	// Build a quick-lookup set of runes in searchTerm (lower-cased).
	set := make(map[rune]struct{}, len(searchTerm))
	for _, r := range searchTerm {
		set[unicode.ToLower(r)] = struct{}{}
	}

	var out strings.Builder
	for _, r := range text {
		escaped := html.EscapeString(string(r)) // protect any HTML in the input
		if _, ok := set[unicode.ToLower(r)]; ok {
			out.WriteString("<b style=\"color: var(--color-primary-strong);\">")
			out.WriteString(escaped)
			out.WriteString("</b>")
		} else {
			out.WriteString(escaped)
		}
	}

	return out.String()
}

templ billettholderCard(billettholder models.Billettholder, searchTerm string) {
	<div class="card" style="display:flex; flex-direction:column; gap:0.5rem; padding: 1rem; border-radius: 8px; background: rgb(49, 53, 78); color: #ffffff;">
		<p style="margin:0;">
			<strong>Bestilling: </strong> @templ.Raw(highlightSearchTerm(strconv.Itoa(billettholder.OrderID), searchTerm))
		</p>
		<p style="margin:0;">
			<strong>Type: </strong> @templ.Raw(highlightSearchTerm(billettholder.TicketType, searchTerm))
		</p>
		<p style="margin:0;">
			<strong>Navn:</strong>
			<em>
				@templ.Raw(highlightSearchTerm(billettholder.FirstName+""+billettholder.LastName, searchTerm))
			</em>
		</p>
		for _, email := range billettholder.Emails {
			if email.Kind == "Ticket" {
				<div style="display: flex; align-items: center; gap:0.5rem; ">
					<strong>Epost:</strong>
					<a href={ "mailto:" + email.Email }>
						@templ.Raw(highlightSearchTerm(email.Email, searchTerm))
					</a>
				</div>
			}
		}
		<div style="display: flex; align-items: center; gap:0.5rem; ">
			if billettholder.IsOver18 {
				<img
					src="/static/icons/adults-only.svg"
					alt="adults only"
				/>
				<p><strong>Alder:</strong> Over 18</p>
			} else {
				<img
					width="34px"
					height="34px"
					src="/static/icons/child-friendly.svg"
					alt="child friendly"
				/>
				<p><strong>Alder:</strong> Under 18</p>
			}
		</div>
		<span>Andre epostadresser p√• samme bestilling:</span>
		for _, email := range billettholder.Emails {
			if email.Kind == "Associated" {
				<a href={ "mailto:" + email.Email }>
					@templ.Raw(highlightSearchTerm(email.Email, searchTerm))
				</a>
			}
		}
		<button
			class="btn btn--outline"
		>
			Legg til epost
		</button>
	</div>
}
