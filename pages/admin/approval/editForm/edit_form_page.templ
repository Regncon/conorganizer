package edit_form

import (
	"context"
	"database/sql"
	"github.com/Regncon/conorganizer/components"
	"github.com/Regncon/conorganizer/components/formsubmission"
	"github.com/Regncon/conorganizer/pages/event"
	"github.com/Regncon/conorganizer/service/authctx"
	"github.com/Regncon/conorganizer/service/eventService"
	"log/slog"
)

templ EditEventFormPage(ctx context.Context, eventId string, db *sql.DB, eventImageDir *string, logger *slog.Logger) {
	<div id="edit-form-container" class="formsubmission-css-container">
		@EditEventFormPageContent(ctx, eventId, db, eventImageDir, logger)
	</div>
}

templ EditEventFormPageContent(ctx context.Context, eventId string, db *sql.DB, eventImageDir *string, logger *slog.Logger) {
	<style>
		.edit-form-with-preview {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: var(--spacing-8x);
		}
	</style>
	{{
	isAdmin := authctx.GetAdminFromUserToken(ctx)
	isRemovedPreviousNext := components.PreviousNext{IsRemoved: true}
	previousNextData, err := eventservice.GetPreviousNext(ctx, db, logger, eventId, eventImageDir)
	}}
	if err != nil {
		logger.Error("Failed to get previous/next data", "error", err)
		return
	}
	{{ eventData, eventErr := eventservice.GetEventById(eventId, db, logger) }}
	if eventErr != nil {
		<p>Error fetching events: { eventErr.Error() }</p>
		return
	}
	<div class="top-of-page-container">
		<div class="header-content-container">
			@components.Breadcrumbs([]components.BreadcrumbPath{
				{Name: "Hjem", Url: "/"},
				{Name: "Admin", Url: "/admin/"},
				{Name: "Godkjenning av arrangementer", Url: "/admin/approval/"},
				{Name: "Rediger arrangement", Url: ""},
			})
		</div>
	</div>
	@components.PreviousNextBar(previousNextData)
	<div class="header-content-container">
		<h1 class="page-heading">Rediger arrangement</h1>
		<div class="edit-form-with-preview">
			<form class="formsubmission-wrapper">
				@formsubmission.FormBody(eventData, isAdmin)
			</form>
			@event.Event_mobile(eventData, isRemovedPreviousNext, eventImageDir)
		</div>
	</div>
	<div class="header-content-container">
		@components.PreviousNextBar(previousNextData)
	</div>
}
